{"version":3,"sources":["components/SubTitle/SubTitle.styled.jsx","components/SubTitle/SubTitle.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Container/Container.styled.jsx","components/Container/Container.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","App.js","index.js"],"names":["SectionTitle","Title","text","Form","Label","Input","AddButton","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","SubTitle","type","pattern","title","required","onChange","placeholder","Component","ContactContainer","ContactItem","ContactButton","ContactList","contacts","onDeleteContact","map","id","onClick","Wrapper","Container","children","LabelFilter","InputFilter","Filter","Section","App","filter","addContact","newContact","uuidv4","find","contact","toLowerCase","alert","deleteContact","contactId","prevState","changeFilter","visibleContacts","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71a20ea6.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const SectionTitle = styled.h3`\n  padding-bottom: 12px;\n  text-align: left;\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: black;\n`\n","import PropTypes from 'prop-types';\nimport { SectionTitle } from './SubTitle.styled';\n\nconst Title = ({ text }) => {\n  return <SectionTitle>{text}</SectionTitle>;\n};\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Title;","import styled from '@emotion/styled/macro';\r\n\r\nexport const Form = styled.form`\r\n  margin-bottom: 30px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 20px;\r\n  max-width: 450px;\r\n`\r\n\r\nexport const Label = styled.label`\r\n  position: relative;\r\n  margin: 0 auto;\r\n  display: block;\r\n\r\n  & svg {\r\n    position: absolute;\r\n    top: 41px;\r\n    left: 5px;\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n`\r\n\r\nexport const Input = styled.input`\r\n  height: 40px;\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n  padding-left: 32px;\r\n  padding-right: 8px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  border-radius: 4px;\r\n  border: 2px solid #dadada;\r\n\r\n  font-size: 1.1rem;\r\n  \r\n  &:focus {\r\n      outline: none;\r\n      border-color: #00b150;\r\n    }\r\n`\r\n\r\nexport const AddButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  background: linear-gradient(to top, #f1f1f1, #ffffff);\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1.05rem;\r\n\r\n  &:active{\r\n    transform: scale(0.95);\r\n  }\r\n\r\n  & svg {\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-right: 12px;\r\n    color:#00b150;\r\n  }\r\n`\r\n","import React, { Component } from 'react';\r\nimport SubTitle from 'components/SubTitle';\r\n\r\nimport { Form, Label, Input, AddButton } from './ContactForm.styled';\r\nimport { TiUserAdd, TiUser, TiPhone } from 'react-icons/ti';\r\n\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n    <Form onSubmit={this.handleSubmit}>\r\n      <Label>\r\n        <SubTitle text={'Name'}/>\r\n        <TiUser/>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={this.handleChange}\r\n          placeholder=\"Name\"\r\n          value={this.state.name}\r\n        />\r\n      </Label>\r\n      <Label>\r\n        <SubTitle text={'Number'}/>\r\n        <TiPhone/>\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={this.handleChange}\r\n          placeholder=\"+xxx xx xxx-xx-xx\"\r\n          value={this.state.number}\r\n        />\r\n      </Label>\r\n\r\n      <AddButton type=\"submit\">\r\n        <TiUserAdd/>\r\n        Add contact</AddButton>\r\n    </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactForm;","import styled from '@emotion/styled/macro';\r\n\r\nexport const ContactContainer = styled.ul`\r\n  width: 100%;\r\n  max-width: 450px;\r\n  margin: 0 auto;\r\n`\r\n\r\nexport const ContactItem = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-radius: 3px;\r\n  color: black;\r\n  background-color: #fff;\r\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);\r\n\r\n  font-size: 1.1rem;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`\r\n\r\nexport const ContactButton = styled.button`\r\n  display: flex;\r\n  align-content: center;\r\n  padding: 6px 10px;\r\n  background: linear-gradient(to top, #e0e0e0, #f2f2f2);\r\n  border: none;\r\n  border-radius: 4px;\r\n\r\n  &:active{\r\n    transform: scale(0.95);\r\n  }\r\n\r\n  & svg {\r\n    width: 16px;\r\n    height: 16px;\r\n    margin-right: 12px;\r\n    color:#ff1e1e;\r\n  }\r\n`","import PropTypes from 'prop-types';\r\nimport {MdRemoveCircle} from 'react-icons/md';\r\nimport {ContactContainer, ContactItem, ContactButton} from './ContactList.styled';\r\n\r\nconst ContactList =({contacts, onDeleteContact})=> {\r\n  return (\r\n    <ContactContainer>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n        ><span>{name}:</span><span>{number}</span>\r\n          <ContactButton onClick={() => onDeleteContact(id)}>\r\n            <MdRemoveCircle/>\r\n            Delete\r\n          </ContactButton>\r\n        </ContactItem>\r\n      ))}\r\n    </ContactContainer>\r\n  )\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func\r\n}\r\n\r\nexport default ContactList;","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Wrapper = styled.div`\r\n  padding: 20px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\r\n  border-radius: 3px;\r\n`","import { Wrapper } from './Container.styled';\r\n\r\nconst Container = ({ children }) => {\r\n  return (\r\n    <Wrapper>\r\n      {children}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const LabelFilter = styled.label`\r\n  position: relative;\r\n  margin: 0 auto;\r\n  display: block;\r\n\r\n  & svg {\r\n    position: absolute;\r\n    top: 44px;\r\n    left: 141px;\r\n    width: 20px;\r\n    height: 20px;\r\n  }\r\n`\r\n\r\nexport const InputFilter = styled.input`\r\n  height: 40px;\r\n  width: 300px;\r\n  margin-bottom: 20px;\r\n  padding-left: 38px;\r\n  padding-right: 8px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  border-radius: 4px;\r\n  border: 2px solid #dadada;\r\n\r\n  font-size: 1.1rem;\r\n  \r\n  &:focus {\r\n      outline: none;\r\n      border-color: #0079b1;\r\n    }\r\n`","import PropTypes from 'prop-types';\r\nimport SubTitle from 'components/SubTitle';\r\n\r\nimport {LabelFilter, InputFilter} from './Filter.styled';\r\nimport {ImSearch} from 'react-icons/im';\r\n\r\nconst Filter = ({value, onChange})=> {\r\n  return (\r\n    \r\n    <LabelFilter>\r\n      <SubTitle text={'Find Contacts by name'}/>\r\n      <ImSearch/>\r\n      <InputFilter type=\"text\" value={value} onChange={onChange}/>\r\n    </LabelFilter>\r\n  )\r\n}\r\n\r\nFilter.propTypes={\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func\r\n}\r\n\r\nexport default Filter;","import styled from \"@emotion/styled/macro\";\n\nexport const Wrapper = styled.section`\n  padding: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`","import { Wrapper } from './Section.styled';\n\nconst Section = ({ children }) => {\n  return (\n    <Wrapper>\n      {children}\n    </Wrapper>\n  );\n};\n\nexport default Section;\n","import styled from '@emotion/styled/macro';\n\nexport const SectionTitle = styled.h2`\n  padding-bottom: 20px;\n  font-size: 2rem;\n  font-weight: 600;\n  color: black;\n`\n","import PropTypes from 'prop-types';\nimport { SectionTitle } from './Title.styled';\n\nconst Title = ({ text }) => {\n  return <SectionTitle>{text}</SectionTitle>;\n};\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Title;","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Container from 'components/Container';\nimport Filter from 'components/Filter';\nimport Section from 'components/Section';\nimport Title from 'components/Title';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const newContact = {\n      id: `id-${uuidv4()}`,\n      name,\n      number,\n    };\n\n    this.state.contacts.find(\n      contact =>\n        contact.name.toLowerCase() === newContact.name.toLowerCase() &&\n        contact.number === newContact.number,\n    )\n      ? alert(`${name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [newContact, ...contacts],\n        }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  visibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <Section>\n        <Container>\n          <Title text={'Phonebook'} />\n          <ContactForm onSubmit={this.addContact} />\n          <Title text={'Contacts'} />\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={this.visibleContacts()}\n            onDeleteContact={this.deleteContact}\n          />\n        </Container>\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}